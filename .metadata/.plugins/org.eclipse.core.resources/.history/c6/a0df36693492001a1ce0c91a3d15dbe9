package com.cg.gocms.service;

import java.util.List;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.cg.gocms.dao.CartRepo;
import com.cg.gocms.entity.CartItemEntity;
import com.cg.gocms.exception.CartItemException;
import com.cg.gocms.model.CartItemModel;

@Service
public class CartItemServiceImpl implements CartItemService{

	@Autowired
	private CartRepo repo; 
	
	private CartItemEntity of(CartItemModel source) {
		CartItemEntity result=null;
		if(source!=null) {
			result = new CartItemEntity();
			result.setCartId(0);
			result.setProductId(source.getProductId());
			result.setUserId(source.getUserId());
			result.setQuantity(source.getQuantity());
			
		}
		return result;
	}
    private CartItemModel of(CartItemEntity source) {
    	CartItemModel result=null;
		if(source!=null) {
			result = new CartItemModel();
			result.setCartId(source.getCartId());
			result.setProductId(source.getProductId());
			result.setUserId(source.getUserId());
			result.setQuantity(source.getQuantity());
			
		}
		return result;
	}
	@Override
	public List<CartItemModel> getCartItemsByUserName(String userId) {
		
		return repo.findAllByUserId(userId).stream().map((entity)->of(entity)).collect(Collectors.toList());
	}

	@Override
	public CartItemModel addToCart(CartItemModel cartItem) throws CartItemException{
		if(cartItem!=null) {
			if(repo.getCartByProductIdAnduserId(cartItem.getProductId(), cartItem.getUserId()).isPresent()){
				throw new CartItemException("Product is already exist in cart.");
			}
			else {
				cartItem=of(repo.save(of(cartItem)));
			}
		}
		return cartItem;
	}
	
	@Override
	public void updateQty(CartItemModel item) throws CartItemException{
		if(!repo.findById(item.getCartId()).isPresent()) {
			throw new CartItemException("Product is not exist in cart.");
		}
		else {
			repo.updateQtyByCartId(item.getCartId(), item.getProductPrice(), item.getQuantity());
		}
		
		
	}
	@Override
	public void removeCartItemsByUserNameAndCartId(String userId, long cartId) throws  CartItemException{
		if(!(repo.existsById(cartId))){
			throw new CartItemException("Product is not exist in cart.");
		}
		else {
			repo.deleteCartByIdAndUserName(userId, cartId);
		}
		
		
	}
	@Override
	public void removeAllCartByUserName(String userName) {
		repo.deleteAllCartByUserName(userName);
		
	}
	
	

}
